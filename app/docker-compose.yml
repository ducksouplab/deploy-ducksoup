services:
  ducksoup:
    profiles:
      - ducksoup
    image: ducksoup:prod
    build:
      dockerfile: Dockerfile.ducksoup
      args:
        UNAME: $DOCKER_UNAME
        UID: $DOCKER_UID
        GID: $DOCKER_GID
    restart: unless-stopped
    user: $DOCKER_UID:$DOCKER_GID
    environment:
      - DUCKSOUP_PORT
      - DUCKSOUP_WEB_PREFIX
      - DUCKSOUP_ALLOWED_WS_ORIGINS
      - DUCKSOUP_EXPLICIT_HOST_CANDIDATE
      - DUCKSOUP_PUBLIC_IP
      - DUCKSOUP_TURN_ADDRESS
      - DUCKSOUP_TURN_PORT
      - DUCKSOUP_TEST_LOGIN
      - DUCKSOUP_TEST_PASSWORD
      - DUCKSOUP_NVCODEC
      - DUCKSOUP_NVCUDA
      - DUCKSOUP_JITTER_BUFFER
      - DUCKSOUP_GENERATE_PLOTS
      - DUCKSOUP_GENERATE_TWCC
      - DUCKSOUP_GCC
      - DUCKSOUP_GST_TRACKING
      - DUCKSOUP_LOG_STDOUT
      - DUCKSOUP_LOG_FILE
      - DUCKSOUP_LOG_LEVEL
      - DUCKSOUP_INTERCEPT_GST_LOGS
      - DUCKSOUP_FORCE_OVERLAY
      - DUCKSOUP_NO_RECORDING
      - DUCKSOUP_STUN_SERVER_URLS
      - CONTAINER_STDOUT_FILE=$DUCKSOUP_CONTAINER_STDOUT_FILE
      - CONTAINER_STDERR_FILE=$DUCKSOUP_CONTAINER_STDERR_FILE
      - GST_DEBUG
      - GST_DEBUG_FILE
      - GST_TRACERS
      - PION_LOG_TRACE
    volumes:
      - ducksoup-config:/app/config
      - ./data/ducksoup:/app/data
      - ./log/ducksoup:/app/log
      - ./plugins:/app/plugins
    logging:
      driver: "json-file"
      options:
        max-file: "100"
        max-size: "200k"
  db:
    profiles:
      - social
    user: $DOCKER_UID:$DOCKER_GID
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - /etc/passwd:/etc/passwd:ro
      - ./config/db/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - db_network
  experiment:
    profiles:
      - social
    depends_on: 
      - db
    restart: unless-stopped
    environment:
      - DATABASE_URL=$OTREE_DATABASE_URL
      - PORT=$OTREE_PORT
      - OTREE_PRODUCTION=1
      - OTREE_REST_KEY
      - OTREE_ADMIN_PASSWORD
      - OTREE_AUTH_LEVEL=STUDY
      - OTREE_DUCKSOUP_URL
      - OTREE_DUCKSOUP_FRONTEND_VERSION
      - OTREE_DUCKSOUP_REQUEST_GPU
      - OTREE_DUCKSOUP_FRAMERATE
      - OTREE_DUCKSOUP_WIDTH
      - OTREE_DUCKSOUP_HEIGHT
      - OTREE_DUCKSOUP_FORMAT=$OTREE_DUCKSOUP_FORMAT
    ports:
      - "$OTREE_PORT:$OTREE_PORT"
    networks:
      - db_network
    logging:
      driver: "json-file"
      options:
          max-file: "100"
          max-size: "200k"
  mastok:
    profiles:
      - social
    depends_on: 
      - db
      - experiment
    image: ducksouplab/mastok:latest
    restart: unless-stopped
    environment:
      - MASTOK_PORT
      - MASTOK_ORIGIN
      - MASTOK_WEB_PREFIX
      - MASTOK_LOGIN
      - MASTOK_PASSWORD
      - MASTOK_DISABLE_LIVE_REDIRECT
      - MASTOK_DATABASE_URL
      - MASTOK_OTREE_PUBLIC_URL
      - MASTOK_OTREE_API_URL
      - MASTOK_OTREE_API_KEY
    ports:
      - "$MASTOK_PORT:$MASTOK_PORT"
    networks:
      - db_network
    logging:
      driver: "json-file"
      options:
          max-file: "100"
          max-size: "200k"
  dcgm_exporter:
    profiles:
      - monitoring
    image: nvidia/dcgm-exporter:3.1.3-3.1.2-ubuntu20.04
    ports:
      - "9400:9400"
    cap_add:
      - SYS_ADMIN
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities: [gpu]
  node_exporter:
    profiles:
      - monitoring
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
  prometheus:
    profiles:
      - monitoring
    user: $DOCKER_UID:$DOCKER_GID
    depends_on: 
      - node_exporter
      - dcgm_exporter
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    extra_hosts:
      - "host:host-gateway"
  grafana:
    profiles:
      - monitoring
    user: $DOCKER_UID:$DOCKER_GID
    depends_on: 
      - prometheus
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "$GF_PORT:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=$GF_PASSWORD
      - GF_SERVER_ROOT_URL=$GF_PATH
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_LIVE_MAX_CONNECTIONS=0
    volumes:
      - ./data/grafana:/var/lib/grafana

volumes:
  ducksoup-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $PWD/config/ducksoup
      
networks:
  db_network: